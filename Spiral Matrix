class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        int n = matrix.length;
        int m = matrix[0].length;
        int left = 0;
        int right = m-1;
        int top = 0;
        int bottom = n-1;
        List<Integer> sm = new ArrayList<Integer>();

        while(left<=right && top<=bottom){
        // right
        for(int i = left; i<=right; i++){
            sm.add(matrix[top][i]);
        }
        top++;
        // bottom
        for(int i = top; i<=bottom; i++){
            sm.add(matrix[i][right]);
        }
        right--;
        //left
        if(top<=bottom){
            for(int i = right; i>=left; i--){
            sm.add(matrix[bottom][i]);
        }
        bottom--;
        }
        if(left<=right ){
            for(int i = bottom; i>=top; i--){
            sm.add(matrix[i][left]);
        }
        left++;
        }
        }
        return sm;  
    }
}
